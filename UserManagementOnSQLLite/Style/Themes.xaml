<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ================= Brushes ================= -->
    <LinearGradientBrush x:Key="menuitembackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="DodgerBlue" Offset="0"/>
        <GradientStop Color="DodgerBlue" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="menubackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="DodgerBlue" Offset="0"/>
        <GradientStop Color="Blue" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuItemHoverBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#1A73E8" Offset="0"/>
        <GradientStop Color="#155BCB" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PrimaryColorForLogin" Color="#007ACC"/>

    <!-- ================== Text Styles ================== -->
    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderBrush" Value="#007ACC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#007ACC"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Foreground" Value="#007ACC"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#444"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorForLogin}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Foreground" Value="#333"/>
    </Style>

    <!-- ================== DataGrid Styles ================== -->
    <Style x:Key="datagridColHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource menubackground}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
    </Style>

    <!-- ================== Menu Styles ================== -->
    <Style TargetType="Menu" x:Key="MainMenuStyle">
        <Setter Property="Background" Value="{StaticResource menubackground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>
    <Style x:Key="ParentMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                            <Grid>
                                <ContentPresenter ContentSource="Header"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                <!-- Arrow for submenu -->
                                <Path x:Name="SubmenuArrow"
                                  Width="8" Height="8" Fill="White"
                                  Data="M 0 0 L 4 4 L 0 8 Z"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Margin="0,0,5,0"
                                  Visibility="Collapsed"/>
                            </Grid>
                        </Border>

                        <!-- Submenu presenter -->
                        <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
                            <Border Background="{StaticResource menubackground}" BorderBrush="Black" BorderThickness="1">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="SubmenuArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="SubMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Name="Border"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter ContentSource="Header"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHoverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- ================== Button Styles ================== -->
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#2D6FD2"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#4CAF50"/>
        <Setter Property="BorderBrush" Value="#388E3C"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border"
                                CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <Border CornerRadius="18" Margin="2">
                                <Border.Background>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0.1" Color="#80FFFFFF"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#66BB6A"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#2E7D32"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MouseOverStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.2" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.2" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1" To="0.5"
                                                         Duration="0:0:0.1"
                                                         AutoReverse="True"
                                                         RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryboard"/>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#388E3C"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#1B5E20"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#BDBDBD"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#9E9E9E"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ModernButton}" x:Key="stopButton" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="DimGray"/>
                    <GradientStop Offset=".3" Color="Black"/>
                    <GradientStop Offset=".7" Color="Black"/>
                    <GradientStop Offset="1" Color="Red"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="DarkRed"/>
    </Style>

</ResourceDictionary>
